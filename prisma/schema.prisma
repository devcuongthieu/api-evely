// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  STAFF
}

enum SeatType {
  NORMAL
  VIP
  COUPLE
}

model User {
  id             Int            @id @default(autoincrement())
  first_name     String
  last_name      String
  email          String         @unique
  email_verified DateTime?
  role           Role           @default(USER)
  password       String
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  PasswordReset  PasswordReset?
}

model VerificationToken {
  identifier String   @id
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PasswordReset {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expires    DateTime
  user_id    Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, token])
}

model Cinema {
  id           Int      @id @default(autoincrement())
  name         String
  phone_number String
  image        String
  address      String
  is_active    Boolean  @default(true)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  screens      Screen[]
}

model Seat {
  id         Int      @id @default(autoincrement())
  row        Int
  column     Int
  is_active  Boolean  @default(true)
  name       String
  seat_type  SeatType
  screen_id  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  screen     Screen   @relation(fields: [screen_id], references: [id])
}

model Screen {
  id          Int      @id @default(autoincrement())
  cinema_id   Int
  name        String
  column_size Int
  row_size    Int
  cinema      Cinema   @relation(fields: [cinema_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  seats       Seat[]
}
